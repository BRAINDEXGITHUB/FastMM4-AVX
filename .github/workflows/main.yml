name: Build

on:
  push:
    branches: 
      - master
    paths:
      - FastMM4.pas
      - FastMM4Messages.pas
      - FastMM4Options.inc

  workflow_dispatch:

jobs:
  build_linux:
    runs-on: self-hosted-linux

    steps:
      - uses: actions/checkout@v2

      - name: Compile a simple demo in ObjFPC mode
        run: cd $GITHUB_WORKSPACE/Tests/Simple && fpc -B -MObjFPC SimpleTest.dpr

      - name: Compile a simple demo in Delphi mode
        run: cd $GITHUB_WORKSPACE/Tests/Simple && fpc -B -Mdelphi SimpleTest.dpr

      - name: Compile with various defined options
        run: |
          cd $GITHUB_WORKSPACE/Tests/Simple
          fpc -B -Mdelphi -dAlign16Bytes SimpleTest.dpr
          fpc -B -Mdelphi -dAlign32Bytes SimpleTest.dpr
          fpc -B -Mdelphi -dDontUseCustomFixedSizeMoveRoutines SimpleTest.dpr
          fpc -B -Mdelphi -dDontUseCustomVariableSizeMoveRoutines SimpleTest.dpr
          fpc -B -Mdelphi -dForceSingleThreaded SimpleTest.dpr
          fpc -B -Mdelphi -dDisablePauseAndSwitchToThread SimpleTest.dpr
          fpc -B -Mdelphi -dDontUseSmallBlocksLockedCriticalSection SimpleTest.dpr
          fpc -B -Mdelphi -dDontUseMediumBlocksLockedCriticalSection SimpleTest.dpr
          fpc -B -Mdelphi -dDontUseLargeBlocksLockedCriticalSection SimpleTest.dpr
          fpc -B -Mdelphi -dDontUseASMVersion SimpleTest.dpr
          fpc -B -Mdelphi -dDisableAsmCodeAlign SimpleTest.dpr


  build_windows:
    runs-on: self-hosted-windows

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Compile a simple demo 
        run: |
          cd $Env:GITHUB_WORKSPACE/Tests/Simple
          & 'C:\Delphi2007\Main\bin\DCC32.EXE' @('-B', '-U../..', 'SimpleTestNoRelative.dpr')
